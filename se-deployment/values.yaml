# Default values for se-deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

owner: ""
stack: ""
environment: ""

terminationGracePeriodSeconds: 30

istio:
  enable: false
  sidecar:
    memory: 500Mi
    cpu: 100m

initContainer:
  enabled: false
  image:
    repository: se-deployment
    pullPolicy: IfNotPresent
    tag: latest

  imagePullSecrets: []

  args: []

  command: []

  env: {}
  # FOO: bar

  envFromSecret: []
  # - envName: FOO
  #   secretName: foobar
  #   secretKey: foo

  envFromConfigMap: []
  # - envName: FOO
  #   configMapName: foobar
  #   configMapKey: foo

  envFromSecretRef: []
  # - foobar

  envFromConfigMapRef: []
  # - foobar

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

image:
  repository: se-deployment
  pullPolicy: IfNotPresent
  tag: latest

imagePullSecrets: []

args: []

command: []

# Not required if using autoscaling.enabled: true
replicaCount: 1

port: 5000

env: {}
# FOO: bar

configmap:
  data: {}
  # data.yaml: |-
  #     foo: bar
  immutable: false

envFromSecret: []
# - envName: FOO
#   secretName: foobar
#   secretKey: foo

envFromConfigMap: []
# - envName: FOO
#   configMapName: foobar
#   configMapKey: foo

envFromSecretRef: []
# - foobar

envFromConfigMapRef: []
# - foobar

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # name: se-deployment

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Used to define custom readinessProbe settings
readinessProbe:
  enabled: false
  # If omitted will use TCP socket probe
  path: /
  # When a probe fails, Kubernetes will try failureThreshold times before giving up
  failureThreshold: 3
  # Number of seconds after the container has started before probe initiates
  initialDelaySeconds: 5
  # How often (in seconds) to perform the probe
  periodSeconds: 5
  # Minimum consecutive successes for the probe to be considered successful after having failed
  successThreshold: 1
  # Number of seconds after which the probe times out.
  timeoutSeconds: 1

# Used to enable a livenessProbe for the pods
livenessProbe:
  enabled: false
  # If omitted will use TCP socket probe
  path: /
  # When a probe fails, Kubernetes will try failureThreshold times before giving up
  failureThreshold: 3
  # Number of seconds after the container has started before probe initiates
  initialDelaySeconds: 5
  # How often (in seconds) to perform the probe
  periodSeconds: 5
  # Minimum consecutive successes for the probe to be considered successful after having failed
  successThreshold: 1
  # Number of seconds after which the probe times out.
  timeoutSeconds: 1

service:
  enabled: true
  type: ClusterIP
  port: 80
  metricsPort:
    enabled: false
    port: 9090

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
    # - host: se-deployment.local
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
  tls: []
  #  - secretName: se-deployment-tls
  #    hosts:
  #      - se-deployment.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

pdb:
  enabled: false
  # Only one can be set
  # minAvailable: 1
  # maxUnavailable: 1

nodeSelector: {}

tolerations: []

affinity: {}

iam:
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # name: se-deployment
  region: eu-west-1
  accountId: "111111111111"
  eksClusterId: QWERTYUIOPASDFGHJKLZXCVBNM123456
  statements: []
    # - effect: Allow
    #   actions:
    #     - s3:List*
    #     - s3:Get*
    #   resources:
    #     - '*'

serviceMonitor:
  enabled: false
  additionalLabels: {}
    # Most common label for our infra
    # release: prometheus-stack
  honorLabels: false
  interval: 30s
  path: /metrics

keda:
  enabled: false
  authentication:
    enabled: false
    secretTargetRef: []
  pollingInterval: 30
  cooldownPeriod: 300
  idleReplicaCount: 0
  minReplicaCount: 1
  maxReplicaCount: 1
  fallback:
    failureThreshold: 3
    replicas: 1
  triggers: []

# Enable VolumeMount for different file systems

mountVolume:
  enabled: false

# Describe Mount Points
volumes: []
# volumes:
#   - name: ssl-server-volume
#     type: nfs
#     server: <EFS_DNS_NAME>
#     path: /assets/ssl/server
#   - name: vrx-asr-xml-volume
#     type: nfs
#     server: <EFS_DNS_NAME>
#     path: /assets/vrx-servlet/asr-batch-job-scheduler.xml

volumeMounts: []
# volumeMounts:
#   - name: ssl-server-volume
#     mountPath: /opt/jumpto/ssl
#   - name: vrx-asr-xml-volume
#     mountPath: /usr/local/tomcat/webapps/vrxServlet/WEB-INF/asr-batch-job-scheduler.xml